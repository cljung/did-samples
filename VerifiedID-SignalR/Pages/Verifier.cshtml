@page
@model AspNetCoreVerifiableCredentials.Pages.VerifierModel
@{
    ViewData["Title"] = "Verifier";
}
<div id="wrap">
    <div style="text-align: center;">
        <img src="VerifiedCredentialExpert-icon.png" height=200px; />
        <h1 id="idTitle">Verifiable Credential Presentation</h1>
        <h2 id="idSubTitle">Presentation request for type @ViewData["CredentialType"]</h2>
        <h3 id="idSub3Title">Accepted issuers: @string.Join( ", ", (string[])ViewData["acceptedIssuers"] )</h3>

        <div id="message-wrapper" class="margin-bottom-75">
            <i class="fas fa-user-check green icon-text-large margin-bottom-25"></i>
            <div id="message">@ViewData["Message"]</div>
            <br />
        </div>

        <button type="button" id="verify-credential" class="button">Verify Credential</button>
        <button type="button" id="check-result" class="button" style="display:none">Check Result</button>
        @if (!string.IsNullOrWhiteSpace((string)ViewData["PhotoClaimName"])) {
            <input type="checkbox" id="useFaceCheck" name="useFaceCheck" @((bool)ViewData["useFaceCheck"] ? "checked" : "")>
            <label for="useFaceCheck" id="labelFaceCheck"> Use FaceCheck</label>
        } else {
            <input type="checkbox" id="useFaceCheck" name="useFaceCheck" value="0" style="display:none">
            <label for="useFaceCheck" id="labelFaceCheck" style="display:none"> Use FaceCheck</label>
        }
        <input type="checkbox" id="useConstraints" name="useConstraints" @((bool)ViewData["useConstraints"] ? "checked" : "")>
        <label for="useConstraints" id="labelConstraints"> Use Constraints</label><br>
        <br />
        <table id="constraints" style="display:none")>
            <tbody>
            <td>
                Claim 
                <input type="text" id="claimName" name="claimName" placeholder="name of the claim" value="@ViewData["constraintName"]"></td>
            <td>
                Operator
                <select name="constrainOp" id="constrainOp">
                    @if ( "value" == (string)ViewData["constraintOp"]) {
                    <option selected>value</option>
                    }else {
                    <option>value</option>
                    }
                    @if ("contains" == (string)ViewData["constraintOp"]) {
                    <option selected>contains</option>
                    } else {
                    <option>contains</option>
                    }
                    @if ("startsWith" == (string)ViewData["constraintOp"]) {
                    <option selected>startsWith</option>
                    } else {
                    <option>startsWith</option>
                    }
                </select>
            </td>
            <td>
                Value 
                <input type="text" id="claimValue" name="claimValue" placeholder="claim value." value="@ViewData["constraintValue"]">
            </td>
            </tbody>
        </table>

        <br />

        <div id="qrcode" style="text-align:center;display:none"></div>

        <script src="qrcode.min.js"></script>
        <script src="signalr.js"></script>
        <script src="verifiedid.requestservice.client.signalr.js"></script>
        <script src="verifiedid.uihandler.js"></script>

        <script>
            var qrcode = new QRCode("qrcode", { width: 150, height: 150 });
            var photoClaimName = '@ViewData["PhotoClaimName"]';

            document.getElementById('verify-credential').addEventListener('click', () => {
                var qp = '?faceCheck=' + (document.getElementById('useFaceCheck').checked ? '1' : '0');
                if (document.getElementById('useFaceCheck').checked) {
                    qp += '&photoClaimName=' + photoClaimName;
                }        
                if (true == document.getElementById('useConstraints').checked) {
                    var claimName = document.getElementById('claimName').value;
                    var claimValue = document.getElementById('claimValue').value;
                    var constraintOp = document.getElementById('constrainOp').value;
                    if ( claimName && constraintOp && claimValue ) {
                        qp += "&claim=" + claimName + "&op=" + constraintOp + "&value=" + claimValue;
                    }
                }
                requestService.apiCreatePresentationRequest += qp;
                requestService.createPresentationRequest();
                document.getElementById('useConstraints').style.display = "none";
                document.getElementById('labelConstraints').style.display = "none";
                document.getElementById('constraints').style.display = "none";
            });

            document.getElementById('check-result').addEventListener('click', () => {
                requestService.pollRequestStatus(requestService.request.id);
            });
            function hideShowConstraints() {
                document.getElementById('constraints').style.display = (document.getElementById('useConstraints').checked ? "" : "none");
            }
            document.getElementById('useConstraints').addEventListener('click', () => {
                hideShowConstraints();
            });
            hideShowConstraints();
        </script>
    </div>

</div>
